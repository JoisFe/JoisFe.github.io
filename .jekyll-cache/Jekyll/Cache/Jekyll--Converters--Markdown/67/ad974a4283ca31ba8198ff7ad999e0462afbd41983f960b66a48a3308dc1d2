I"<p>이전에는 회원 도메인 설계를 했다면 이제는 주문 할인 도메인 설계를 해보려 한다.</p>

<h2 id="주문-할인-도메인-설계">주문 할인 도메인 설계</h2>
<h3 id="주문-할인-정책">주문 할인 정책</h3>
<ol>
  <li>회원은 상품을 주문할 수 있음 <br /></li>
  <li>회원의 등급에 따라 할인 정책을 적용할 수 있음 <br /></li>
  <li>할인 정책은 모든 VIP 등급의 경우에는 1000원을 할인해주는 고정 금액 할인을 적용하려 한다. (하지만 변경 될 수도 있다.) <br /></li>
  <li>할인 정책은 변경 가능성이 높다. 왜냐하면 회사에서 기본 할인 정책을 하직 정하지 못했기 때문이다. 오픈 직전까지 고민을 미루려고 하고, 최악의 경우에는 할인을 적용하지 않을 수도 있다. <br />
<br /></li>
</ol>

<h3 id="주문-도메인-협력-역할-책임-관계">주문 도메인 협력, 역할, 책임 관계</h3>
<p><img src="/images/Spring_basic(3)_files/주문 도메인 협력, 역할, 책임.jpeg" alt="jpeg" />
<br /></p>

<ol>
  <li>주문 생성 : 클라이언트가 주문 서비스에 주문 생성을 요청 <br /></li>
  <li>회원 조회 : 할인을 위해서 회원 등급이 필요하기 때문에 주문 서비슨는 회원 저장소에서 회원을 조회하여 해당 회원의 등급을 알아야 한다. <br /></li>
  <li>할인 적용 : 주문 서비스는 해당 회원의 등급을 확인한 후 할인 여부를 할인 정책에 위임한다. <br /></li>
  <li>주문 결과 반환 : 주문 서비스는 할인 결과를 포함한 전체 주문에 대한 결과를 클라이언트에게 반환한다. <br /> <br /></li>
</ol>

<p>참고로 실제 주문 데이터는 DB에 저장할 것이다. 하지만 여기 예제에서는 생략하고 단순하게 주문 결과를 반환하는 정도로 구현할 것이다. <br />
<br /></p>

<h3 id="주문-도메인-전체">주문 도메인 전체</h3>
<p>주문 할인 도메인 뿐만 아니라 이전에 구현했던 회원 도메인까지 다 합친 주문 도메인 전체에 대해 나타내면 <br /></p>

<p><img src="/images/Spring_basic(3)_files/주문 도메인 전체.jpeg" alt="jpeg" />
<br />
<br /></p>

<h3 id="위-처럼-설계를-하면-역할과-구현을-분리했기-때문에-자유롭게-구현-객체를-조립할-수-있다">위 처럼 설계를 하면 역할과 구현을 분리했기 때문에 자유롭게 구현 객체를 조립할 수 있다.</h3>
<h3 id="따라서-아직-정확히-결정되지-않은-회원-저장소-할인-정책-또한-유연하게-변경할-수-있다">따라서 아직 정확히 결정되지 않은 회원 저장소, 할인 정책 또한 유연하게 변경할 수 있다.</h3>

<p><br /><br /></p>

<h3 id="주문-도메인-클래스-다이어그램">주문 도메인 클래스 다이어그램</h3>
<p><img src="/images/Spring_basic(3)_files/주문 도메인 클래스 다이어그램.jpeg" alt="jpeg" /></p>
:ET